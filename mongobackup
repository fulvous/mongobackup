#!/bin/sh

# Leon Ramos
# leon.ramos@creadoresdigitales.com
# 2017

### VARIABLES
D=false
LOGGER="/usr/bin/logger -t $0"
MONGODUMP="/usr/bin/mongodump"

#### FUNCTIONS
echoYellow () {
  $D && /bin/echo -e "\e[33m$1\e[0m"
  $LOGGER "$1"
}

echoBlue () {
  $D && /bin/echo -e "\e[34m$1\e[0m"
  $LOGGER "$1"
}

echoGreen () {
  $D && /bin/echo -e "\e[32m$1\e[0m"
  $LOGGER "$1"
}

echoRed () {
  $D && /bin/echo -e "\e[91m$1\e[0m"
  $LOGGER "$1"
}

echoStep () {
  $D && /bin/echo -ne "\e[1m$1\e[0m"
  $LOGGER "$1"
}

echoD () {
  $D && /bin/echo "$1" 
  $LOGGER "$1"
}

usage () {
  echoStep "Usage: $0"
  echo " [-f backup_folder] [-d databases] [-v]"
  echo 
  echo "This script backs up and rotate mongo databases"
  echo 
  echo "   -f sets the backup folder"
  echo "   -d Databases to backup separated by commas"
  echo "   -v Shows verbose information"
  echo
  echo "Example for /etc/crontab: "
  echo
  echo "  0 2 * * * root /usr/local/sbin/$0 -f /opt/backup -d my_db"
  echo 
}


while getopts "d:f:v" optname ; do
 case "$optname" in
  "f") FOLDER=$OPTARG
       ;;
  "d") DATABASES=$OPTARG
       ;;
  "v") D=true
       ;;
  "?")
       echo >&2
       echo "===============" >&2
       echoRed "ERROR: Unkown option." >&2
       echo "===============" >&2
       echo >&2
       usage
       exit 1
       ;;
 esac
done


if [ -z "$FOLDER" ] || [ -z "$DATABASES" ] ; then
  D=true
  echoRed "Missing parameters"
  usage
  exit 1
fi


function getMongoVersion () {
  VERSION=$( mongo --version | egrep -o "[0-9\.]+$" ) 
}

function getTimeStamp () {
  TIMESTAMP=$( date +%Y%m%d-%H%M )
}

function checkFolder () {
  if [ -d "$FOLDER" ] ; then
    echoGreen "$FOLDER"
  else
    D=true
    echoRed "Missing folder '$FOLDER'"
    exit 1
  fi
}

function backupDatabases () {
  OLDIFS=$IFS
  IFS=','
  for i in $DATABASES ; do 
    getTimeStamp
    DFOLDER="$FOLDER/$TIMESTAMP-$i-mongo$VERSION"
    mkdir -p $DFOLDER

    if [ $? -ne 0  ] ; then
      D=true
      echoRed "Could not create folder: '$DFOLDER'"
      exit 1
    fi


    if $D ; then
      $MONGODUMP -o $DFOLDER -d $i
    else
      $MONGODUMP -o $DFOLDER -d $i > /dev/null 2>&1
    fi

    if [ $? -ne 0 ] ; then
      D=true
      echoRed "Error Backing up '$i'"
      exit 1
    fi
    
    echoGreen "$i Backed up!"

  done
  IFS=$OLDIFS
}

getMongoVersion
getTimeStamp

echoStep "Mongo detected version: "
echoBlue "'$VERSION'"
echoStep "TimeStamp: "
echoBlue "'$TIMESTAMP'"
echoStep "Backup folder: "
checkFolder
echoStep "Databases to backup: "
echoBlue "'$DATABASES'"
echoStep "Backingup databases: "
backupDatabases

